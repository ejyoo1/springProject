<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet 설정파일 -->
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- /resources/** 를  /resources/폴더로 매핑 (src/main/webapp/resources)-->
	<resources mapping="/resources/**" location="/resources/" /><!-- 기본 서블릿이 하던 행위를 하도록 함. -->

	<!-- 페이지 URL 오는 곳 : viewResolver Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- ServletFileUpload, MultipartHttpServletParser 대신하는 곳-->
	<!-- common-file-upload.jar 필요! -->
	<!-- encType을 구분하여 처리 -->
	<!-- 파일 처리 방법 : encType multipart Form Data , Servlet Context 에 Multipart Resolver 설정 , jar 추가 -->
	<beans:bean id="multipartResolver"
							class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
							p:defaultEncoding="utf-8"
  />
	
	<context:component-scan base-package="com.spring.controller" />
	
	
	
</beans:beans>
